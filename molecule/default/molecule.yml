---
dependency:
  name: galaxy
  options:
    role-file: ansible-galaxy-requirements.yml
    roles-path: ${HOME}/.ansible/roles
    requirements-file: ansible-galaxy-requirements.yml
    collections-path: ${HOME}/.ansible/collections
    ignore-errors: true
    force: false
    verify: false

driver:
  name: delegated
  options:
    managed: False
    login_cmd_template: 'docker exec -ti {instance} bash'
    ansible_connection_options:
      ansible_connection: docker

platforms:
  - name: instance
    image: ubuntu:22.04
    dockerfile: ../Dockerfile
    command: ${MOLECULE_DOCKER_COMMAND:-/lib/systemd/systemd}
    ansible_python_interpreter: /usr/bin/python3
    pre_built_image: true
    cgroupns_mode: host
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:rw
    privileged: true

provisioner:
  name: ansible
  options:
    diff: true
  config_options:
    defaults:
      interpreter_python: auto_silent
      callbacks_enabled: profile_tasks, timer, yaml
      remote_tmp: /tmp
  ssh_connection:
    pipelining: False

scenario:
  create_sequence:
    - dependency
    - create
    - prepare
  check_sequence:
    - dependency
    - cleanup
    - destroy
    - create
    - prepare
    - converge
    - check
    - destroy
  converge_sequence:
    - dependency
    - create
    - prepare
    - converge
  destroy_sequence:
    - dependency
    - cleanup
    - destroy
  test_sequence:
    - dependency
    - cleanup
    - destroy
    - syntax
    - create
    - prepare
    - converge
    - idempotence
    - side_effect
    - verify
    - cleanup
    - destroy

verifier:
  #name: ansible
  # use TestInfra to ensure templates and files are well present with good permissions
  name: testinfra